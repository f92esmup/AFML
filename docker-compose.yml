# Docker Compose para AFML Trading System
# Facilita la ejecución del sistema en modo LIVE/TESTNET
# 
# Uso:
#   Testnet: docker-compose up afml-testnet
#   Live:    docker-compose up afml-live

version: '3.8'

services:
  # =========================================================================
  # Servicio para modo TESTNET (desarrollo/pruebas)
  # =========================================================================
  afml-testnet:
    build:
      context: .
      dockerfile: Dockerfile.live
    container_name: afml-testnet
    env_file:
      - .env
    environment:
      - LOG_LEVEL=INFO
    volumes:
      # Modelos entrenados
      - ./entrenamientos:/app/entrenamientos
    command: ["--train-id", ""]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "conda", "run", "-n", "AFML", "python", "-c", "import asyncio; print('OK')"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =========================================================================
  # Servicio para modo LIVE (producción real - ⚠️ USAR CON PRECAUCIÓN)
  # =========================================================================
  afml-live:
    build:
      context: .
      dockerfile: Dockerfile.live
    container_name: afml-live
    env_file:
      - .env
    environment:
      - MODE=live
      - BINANCE_TESTNET=false
      - LOG_LEVEL=WARNING
    volumes:
      - ./logs:/app/logs
      - ./registros_produccion:/app/registros_produccion
      - ./entrenamientos:/app/entrenamientos
    command: ["--mode", "live", "--symbol", "BTCUSDT"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "conda", "run", "-n", "AFML", "python", "-c", "import asyncio; print('OK')"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

# =========================================================================
# Volúmenes nombrados (opcional - descomentear si prefieres volúmenes Docker)
# =========================================================================
# volumes:
#   afml-logs:
#   afml-registros:
#   afml-entrenamientos:

# =========================================================================
# Comandos útiles:
# =========================================================================
# Iniciar testnet:     docker-compose up -d afml-testnet
# Iniciar live:        docker-compose up -d afml-live
# Ver logs:            docker-compose logs -f afml-testnet
# Detener:             docker-compose down
# Reconstruir:         docker-compose build
# Ver estado:          docker-compose ps
# Entrar al shell:     docker-compose exec afml-testnet /bin/bash
